name: Build and Release

on:
  push:
    tags:
      - 'v*' # 当推送版本标签时触发

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            artifact_name: binary_hex_trainer_windows
          - os: ubuntu-latest
            artifact_name: binary_hex_trainer_linux
          - os: macos-latest
            artifact_name: binary_hex_trainer_mac

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install rich pyinstaller
    
    - name: Build executable
      run: python build.py
    
    - name: Create release package
      run: |
        mkdir -p release
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp dist/binary_hex_trainer.exe release/
        else
          cp dist/binary_hex_trainer release/
        fi
        cp README.md release/
        zip -r ${{ matrix.artifact_name }}.zip release/
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_name }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: binary_hex_trainer_windows
        path: ./dist

    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: binary_hex_trainer_linux
        path: ./dist

    - name: Download Mac artifact
      uses: actions/download-artifact@v4
      with:
        name: binary_hex_trainer_mac
        path: ./dist

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/binary_hex_trainer_windows.zip
        asset_name: binary_hex_trainer_windows.zip
        asset_content_type: application/zip

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/binary_hex_trainer_linux.zip
        asset_name: binary_hex_trainer_linux.zip
        asset_content_type: application/zip

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/binary_hex_trainer_mac.zip
        asset_name: binary_hex_trainer_mac.zip
        asset_content_type: application/zip 